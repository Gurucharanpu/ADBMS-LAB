-- EXPERIMENT1
-- 1
-- create
CREATE TABLE INSTRUCTOR (
  ID INTEGER PRIMARY KEY,
  name TEXT NOT NULL,
  dept_name TEXT NOT NULL,
  salary INT
);

-- insert
INSERT INTO INSTRUCTOR VALUES (10101, 'Srinivasan', 'Comp. Sci.', '65000');
INSERT INTO INSTRUCTOR VALUES (12121, 'Wu', 'Finance', '90000');
INSERT INTO INSTRUCTOR VALUES (15151, 'Mozart', 'Music', '40000');
INSERT INTO INSTRUCTOR VALUES (22222, 'Einstein', 'Physics', '95000');
INSERT INTO INSTRUCTOR VALUES (32343, 'El Said', 'History', '60000');
INSERT INTO INSTRUCTOR VALUES (33456, 'Gold', 'Physics', '87000');
INSERT INTO INSTRUCTOR VALUES (45565, 'Katz', 'Comp. Sci.', '75000');
INSERT INTO INSTRUCTOR VALUES (58583, 'Califieri', 'History', '62000');
INSERT INTO INSTRUCTOR VALUES (76543, 'Singh', 'Finance', '80000');
INSERT INTO INSTRUCTOR VALUES (76766, 'Crick', 'Biology', '72000');
INSERT INTO INSTRUCTOR VALUES (83821, 'Brandt', 'Comp. Sci.', '92000');
INSERT INTO INSTRUCTOR VALUES (98345, 'Kim', 'Elec. Eng.', '80000');

-- fetch 
SELECT * FROM INSTRUCTOR;

-- create
CREATE TABLE TEACHES (
  ID INTEGER NOT NULL,
  COURSE_ID VARCHAR(50) NOT NULL,
  SEC_ID TEXT NOT NULL,
  SEMESTER CHAR(50) NOT NULL,
  YEAR INT NOT NULL,
  FOREIGN KEY (ID) REFERENCES INSTRUCTOR(ID)
);

-- 2
-- insert
INSERT INTO TEACHES VALUES (10101, 'CS-101', '1', 'Fall', 2017);
INSERT INTO TEACHES VALUES (10101, 'CS-315', '1', 'Spring', 2018);
INSERT INTO TEACHES VALUES (10101, 'CS-347', '1', 'Fall', 2017);
INSERT INTO TEACHES VALUES (12121, 'FIN-201', '1', 'Spring', 2018);
INSERT INTO TEACHES VALUES (15151, 'MU-199', '1', 'Spring',2018);
INSERT INTO TEACHES VALUES (22222, 'PHY-101', '1', 'Fall', 2017);
INSERT INTO TEACHES VALUES (32343, 'HIS-351', '1', 'Spring', 2018);
INSERT INTO TEACHES VALUES (45565, 'CS-101', '1', 'Spring', 2018);
INSERT INTO TEACHES VALUES (45565, 'CS-319', '1', 'Spring', 2018);
INSERT INTO TEACHES VALUES (76766, 'BIO-101', '1', 'Summer', 2017);
INSERT INTO TEACHES VALUES (76766, 'BIO-301', '1', 'Summer', 2018);
INSERT INTO TEACHES VALUES (83821, 'CS-190', '2', 'Spring', 2017);
INSERT INTO TEACHES VALUES (83821, 'CS-319', '2', 'Spring', 2018);
INSERT INTO TEACHES VALUES (98345, 'EE-181', '1', 'Spring', 2017);

-- fetch 
SELECT * FROM TEACHES;

-- 3
INSERT INTO INSTRUCTOR(ID, name, dept_name, salary) VALUES('10211', 'Smith', 'Biology', 66000);
SELECT * FROM INSTRUCTOR;

-- 4
DELETE FROM INSTRUCTOR WHERE ID="10211";
SELECT * FROM INSTRUCTOR;

-- 5
SELECT * FROM INSTRUCTOR WHERE dept_name='History';

-- 6
SELECT * FROM INSTRUCTOR CROSS JOIN TEACHES;  

-- 7
SELECT name, COURSE_ID FROM INSTRUCTOR INNER JOIN TEACHES ON INSTRUCTOR.ID=TEACHES.ID;

-- 8
SELECT * From INSTRUCTOR WHERE name LIKE '%in%';

-- 9
SELECT * FROM INSTRUCTOR WHERE salary BETWEEN 90000 and 100000;


-- EXPERIMENT2
-- 1
SELECT * FROM INSTRUCTOR order by salary ASC;

-- 2
SELECT COURSE_ID FROM TEACHES where (SEMESTER = "Fall" and YEAR = "2017") or (SEMESTER = "Spring" and YEAR = "2018");

-- 3
SELECT COURSE_ID FROM TEACHES where (SEMESTER = "Fall" and YEAR = "2017") and (SEMESTER = "Spring" and YEAR = "2018");

-- 4
SELECT COURSE_ID FROM TEACHES where (SEMESTER = "Fall" and YEAR = "2017");

-- 5
INSERT INTO INSTRUCTOR(ID, name, dept_name, salary) 
VALUES('10211', 'Smith', 'Biology', 66000),
('10212', 'Tom', 'Biology', NULL);
SELECT * FROM INSTRUCTOR;

-- 6
SELECT * FROM INSTRUCTOR where salary = NULL;

-- 7
SELECT AVG(salary) FROM INSTRUCTOR;

-- EXPERIMENT3
-- 1
SELECT COUNT(DISTINCT ID) AS total_instructors_spring_2018 FROM TEACHES WHERE SEMESTER = 'Spring' AND YEAR = 2018;

-- 2
SELECT COUNT(*) AS number_of_tuples FROM TEACHES;

-- 3
SELECT dept_name, AVG(salary) AS avg_salary FROM INSTRUCTOR GROUP BY dept_name;

-- 4
SELECT dept_name, AVG(salary) AS avg_salary FROM INSTRUCTOR GROUP BY dept_name HAVING avg_salary > 42000;

-- 5
SELECT name FROM INSTRUCTOR WHERE name NOT IN ('Mozart', 'Einstein');

-- 6
SELECT e.name FROM INSTRUCTOR e WHERE e.salary > ANY (SELECT salary FROM INSTRUCTOR WHERE dept_name = 'Biology');

-- 7
SELECT e.name FROM INSTRUCTOR e WHERE e.salary > ALL (SELECT salary FROM INSTRUCTOR WHERE dept_name = 'Biology');

-- 8
SELECT dept_name, AVG(salary) AS avg_salary FROM INSTRUCTOR GROUP BY dept_name HAVING AVG(salary) > 42000;
